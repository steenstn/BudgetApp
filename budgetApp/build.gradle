
apply plugin: 'com.android.application'

apply plugin: 'jacoco'

sourceSets {
   /* unitTest {
        unitTest.setRoot('src/test')
        //java.srcDir file('src/main/java/tests')
    }*/
}
android {
    compileSdkVersion 17
    buildToolsVersion "20.0.0"

    defaultConfig {
        applicationId "budgetapp.main"
        minSdkVersion 8
        targetSdkVersion 18
    }

    buildTypes {
        release {
            //runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

    }
    jacoco {
        version "0.7.1.201405082137"
    }
}
def coverageSourceDirs = [
        'src/main/java',
]
task jacocoTestReport(type: JacocoReport, dependsOn: "connectedAndroidTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R*.class',
                       '**/*$InjectAdapter.class',
                       '**/*$ModuleAdapter.class',
                       '**/*$ViewInjector*.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDebug.exec")
    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}
repositories {
    mavenCentral()
}
/*
configurations {
    unitTestCompile.extendsFrom runtime
    unitTestRuntime.extendsFrom unitTestCompile
}*/
/*
task unitTest(type:Test, dependsOn: assemble) {
    description = "run unit tests"
    testClassesDir = project.sourceSets.unitTest.output.classesDir
    classpath = project.sourceSets.unitTest.runtimeClasspath
}*/

//build.dependsOn unitTest
dependencies {
    compile 'com.jayway.android.robotium:robotium-solo:5.2.1'
    compile 'com.android.support:support-v4:+'
    compile project(':library')
    //unitTestCompile files("$project.buildDir/intermediates/classes/debug")
    //unitTestCompile 'junit:junit:4.11'
    //unitTestCompile 'com.google.android:android:4.0.1.2'
   // unitTestCompile 'com.google.android:android-test:4.1.1.4'
}
